{"version":3,"sources":["components/Header.jsx","components/Footer.js","components/Section.jsx","components/Home.jsx","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","Container","href","src","alt","Menu","RightMenu","CustomMenu","styled","div","Footer","Wrap","Date","getFullYear","Section","title","touchless","bgimage","description","leftBtnText","rightBtnText","style","backgroundImage","bottom","ItemText","Button","ButtonGroup","LeftButton","RightButton","DownArrow","Home","console","log","App","className","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a810d67.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import CloseIcon from \"@material-ui/icons/Close\";\n\nconst Header = () => {\n  // const [burgerStatus, setburgerStatus] = useState(false);\n  return (\n    <Container  >\n      <a href=\"/asdf\">\n        <img\n          src=\"https://www.freepnglogos.com/uploads/tesla-logo-png-20.png\"\n          alt=\"\"\n        />\n      </a >\n\n      <Menu>\n        <p>\n          <a href=\"/asdf\">Model S</a>\n        </p>\n        <p>\n          <a href=\"/asdf\">Model 3</a>\n        </p>\n        <p>\n          <a href=\"/asdf\">Model X</a>\n        </p>\n        <p>\n          <a href=\"/asdf\">Model Y</a>\n        </p>\n        <p>\n          <a href=\"/asdf\">Solar Roof</a>\n        </p>\n        <p>\n          <a href=\"/asdf\">Solar Panels</a>\n        </p>\n      </Menu>\n      <RightMenu>\n        <a href=\"/asdf\">SHOP</a>\n        <a href=\"/asdf\">Account</a>\n        <CustomMenu>\n        <a href=\"/asdf\">Menu</a>\n        </CustomMenu>\n      </RightMenu>\n      {/* <BurgerNav>\n        <CustomClose>\n          <CloseWraper>\n            <CloseIcon />\n          </CloseWraper>\n        </CustomClose>\n        <li>\n          <a href=\"/asdf\">Existing Inventory</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Used Inventory</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Trade-In</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Cybertruck</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Roadaster</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Existing Inventory</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Existing Inventory</a>\n        </li>\n        <li>\n          <a href=\"/asdf\">Existing Inventory</a>\n        </li>\n      </BurgerNav> */}\n    </Container>\n  );\n};\n\nexport default Header;\nconst Container = styled.div`\n  display: flex;\n  margin-top: -6000px;\n  justify-content: space-between;\n  min-height: 160px;\n  margin-top: 30px;\n  margin-left: 20px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n\n  img {\n    width: 100px;\n    height: 15px;\n  }\n`;\nconst Menu = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  cursor: pointer;\n  a {\n    font-size: 600;\n    padding: 0px 10px;\n    flex-wrap: nowrap;\n    color: black;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition:  width 2s;\n  }\n  a:hover{\n    background-color: rgba(0,0,0,0.3);\n   color: black;\n    padding:10px;\n    border-radius:20px;\n    opacity:0.9;\n  }\n`;\nconst RightMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  a {\n    text-decoration: none;\n    font-size: 600;\n    padding: 0px 10px;\n    flex-wrap: nowrap;\n    text-transform: uppercase;\n    color: black;\n  }\n  \n`;\nconst CustomMenu = styled(RightMenu)`\n  cursor: pointer;\n`;\n// const BurgerNav = styled.div`\n//   position: fixed;\n//   top: 0;\n//   bottom: 0;\n//   right: 0;\n//   background-color: white;\n//   width: 300px;\n//   z-index: 16;\n//   list-style: none;\n//   padding: 20px;\n//   display: flex;\n//   flex-direction: column;\n//   text-align: start;\n\n//   a {\n//     font-weight: 600;\n//     text-decoration: none;\n    \n//   }\n\n//   li {\n//     border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n//     padding: 15px 0;\n//     transform: ${props=>props.burgerStatus? 'translateX(100%)' :'translateX(0)'};\n//   }\n// `;\n// const CustomClose = styled.div`\n// justify-content: flex-end;\n//   margin-right:0%;`;\n// const CloseWraper = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n//   margin-right:0%;\n//   cursor: pointer;\n// `;\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst Footer = () => {\r\n    \r\n    return (\r\n        <Container>\r\n            <Wrap>\r\n<p> AKASH <span>&#169;</span> COPYRIGHT {(new Date().getFullYear())}  CONTACT  NEWS FORUMS </p>\r\n    </Wrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer\r\nconst Container=styled.div`\r\n\r\n\r\n\r\n`\r\nconst Wrap =styled.div`\r\ndisplay: flex;\r\nalign-items:center;\r\njustify-content:space-evenly;\r\n\r\np{padding:30px 20px;\r\n    font-weight:600;\r\n    font-size:12px;\r\n    color: #333333;\r\n    \r\n}\r\n\r\n\r\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport Fade from \"react-reveal\"\nconst Section = ({\n  title,\n  touchless,\n  bgimage,\n  description,\n  leftBtnText,\n  rightBtnText,\n}) => {\n \n  return (\n    \n    <Wrap style={{backgroundImage: `url(${ bgimage})`}} >\n  \n    \n    <Fade bottom>\n      <ItemText>\n      \n        <h1>{title}</h1>\n        <p>{description} <span>{touchless}</span></p>\n      </ItemText>\n      </Fade>\n      <Button>\n      <Fade bottom>\n        <ButtonGroup>\n          <LeftButton>{leftBtnText}</LeftButton>\n          {rightBtnText && <RightButton>{rightBtnText}</RightButton>}\n        </ButtonGroup>\n        <DownArrow>\n          <FaChevronDown />\n        </DownArrow>\n        </Fade>\n      </Button>\n    </Wrap>\n  );\n};\n\nexport default Section;\nconst Wrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n \n\n`;\n\nconst ItemText = styled.div`\nfont-size: 20px;\np{\n  font-size:14px;\n  opacity: 0.5;\n}\nspan{\n  text-decoration:underline;\n}\nmargin-top:120px`;\nconst ButtonGroup = styled.div`\n  display: flex;\n\n  margin-bottom: 30px;\n  @media (max-width: 728px) {\n    flex-direction: column;\n  }\n`;\nconst LeftButton = styled.div`\n  background-color: black;\n  height: 40px;\n  width: 256px;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100px;\n  margin: 20px;\n  font-size: 13px;\n  cursor: pointer;\n  @media (max-width: 728px) {\n    margin: 10px;\n  }\n`;\nconst RightButton = styled(LeftButton)`\n  background-color: white;\n  opacity: 0.85;\n  color: black;\n`;\nconst DownArrow = styled.div`\n  margin-top: 20px;\n  height: 40px;\n\n  font-size: 25px;\n  color: white;\n  animation: animateDown infinite 1.5s;\n`;\nconst Button = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Footer from \"./Footer\";\nimport Section from \"./Section\";\nfunction Home() {\n  console.log();\n  return (\n    <Container>\n      <Section\n        title=\"Model S\"\n        description=\"Order Online for\"\n        touchless=\"Touchless Delivery \"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/676da95d-942e-414c-8534-f1832f0d4ced/bvlatuR/std/3296x1798/ms-homepage-desktop\"\n        leftBtnText=\"CUSTOM ORDER\"\n        rightBtnText=\"EXISTING ORDER\"\n      />\n\n      <Section\n        title=\"Model Y\"\n        description=\"Order Online for \"\n        touchless=\"Touchless Delivery \"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/8e2df1b9-a4bf-4eb9-beec-2cf5cc77fca0/bvlatuR/std/2880x2400/Desktop-ModelY?quality=\"\n        leftBtnText=\"CUSTOM ORDER\"\n        rightBtnText=\"EXISTING ORDER\"\n      />\n      <Section\n        title=\"Model 3\"\n        description=\"Order Online for\"\n        touchless=\"Touchless Delivery \"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/e90a341e-f9ca-4aa1-8eab-94afea118786/bvlatuR/std/2880x1800/M3-Homepage-D\"\n        leftBtnText=\"CUSTOM ORDER\"\n        rightBtnText=\"EXISTING ORDER\"\n      />\n      <Section\n        title=\"Model X\"\n        description=\"Oerder Online for \"\n        touchless=\"Touchless Delivery \"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/325743a2-d187-4e28-91a3-5a2e47e317f7/bvlatuR/std/2880x1800/ModelX-Homepage-D\"\n        leftBtnText=\"CUSTOM ORDER\"\n        rightBtnText=\"EXISTING ORDER\"\n      />\n      <Section\n        title=\"Solar Panels\"\n        description=\"Lowest Cost Solar Panels in India\"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/a86dcec8-ff70-4ae5-b1b2-d598575698bc/bvlatuR/std/2880x1800/us_homepage_sp_hero_d?quality=70\"\n        leftBtnText=\"ORDER NOW\"\n        rightBtnText=\"LEARN MORE\"\n      />\n      <Section\n        title=\"Solar Roof\"\n        description=\"Produce Clean Energy From Your Roof\"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/27ae57a3-3a1d-480c-b557-cd9caf51b96e/bvlatuR/std/2880x1620/solar-roof-hero-desktop?quality=70\"\n        leftBtnText=\"ORDER NOW\"\n        rightBtnText=\"LEARN MORE\"\n      />\n      <Section\n        title=\"Accessories\"\n        description=\"Produce Clean Energy From Your Roof\"\n        bgimage=\"https://tesla-cdn.thron.com/delivery/public/image/tesla/dd739764-bcaa-4263-9488-8c73bc9fb046/bvlatuR/std/2880x2400/Desktop-Accessories\"\n        leftBtnText=\"SHOP NOW\"\n      />\n      <Footer/>\n    </Container>\n  );\n}\n\nexport default Home;\nconst Container = styled.div`\n  height: 100vh;\n`;\n","import React from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Header />\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}